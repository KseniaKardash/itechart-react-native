// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostsFeed snapShot renders as expected 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eaeaea",
      "flex": 1,
      "padding": 20,
      "paddingTop": 10,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": "#D14DAE",
              "fontSize": 40,
            },
            Object {
              "margin": 5,
              "marginBottom": 10,
              "marginTop": 10,
              "padding": 5,
            },
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#545454",
          "fontSize": 30,
          "fontWeight": "bold",
          "marginBottom": 20,
          "marginLeft": 15,
          "marginRight": 15,
          "marginTop": 10,
          "textAlign": "center",
        }
      }
    >
      FEED
    </Text>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": "#D14DAE",
              "fontSize": 40,
            },
            Object {
              "margin": 5,
              "marginBottom": 10,
              "marginTop": 10,
              "padding": 5,
            },
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View />
  <RCTScrollView
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={15}
    keyExtractor={[Function]}
    maxToRenderPerBatch={20}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "width": "100%",
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
